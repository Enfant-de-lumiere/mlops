events {}

http {
    server {
        listen 80;

        # Proxy pour service_a (http://localhost/service_a/)
        location /service_a/ {
            proxy_pass http://service_a:8000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            #Le header c'est pour éviter que le navigateur bloque les requêtes suite à des problèmes CORS
            #ces problèmes CORS apparaissent car on est en local et le navigateur n'aime pas les requêtes en local.
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        }

        location /service_b/ {
            proxy_pass http://service_b:8001/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Proxy pour mongo-express (http://localhost/mongo/)
        location /mongo/ {
            proxy_pass http://mongo-express:8081/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # Réécriture des chemins pour que les fichiers statiques soient bien trouvés
            sub_filter 'href="/' 'href="/mongo/';
            sub_filter 'src="/' 'src="/mongo/';
            sub_filter_once off;
        }
    }
}
